stages:
- Test
- Docker build
- Deploy

.docker-build: &docker-build
  image: docker:stable
  services:
  - docker:stable-dind
  script:
  - apk add --no-cache make
  - echo $REGISTRY_PASSWORD | docker login $REGISTRY_PATH -u $REGISTRY_LOGIN --password-stdin
  - make pull
  - make all
  - make release

.only-master: &only-master
  only:
    branches:
    - master

.only-develop: &only-develop
  only:
    branches:
    - develop

.not-pr: &not-pr
  except:
    events:
    - pull_request

jobs:
- name: PHP tests
  stage: Test
  image: framgiaciteam/laravel-workspace:7.3
  services:
  - name: mysql
    image: mariadb:10
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
  script:
  - cp .env.example .env
  - composer install
  - php artisan key:generate
  - yarn
  - yarn dev
  - php artisan migrate --seed
  - phpcs --standard=Framgia --ignore=app/Supports/* app
  - vendor/bin/phpunit
  cache:
  - key: deps_$CI_BRANCH
    paths:
    - vendor
    - node_modules

- name: Develop
  stage: Docker build
  environment:
    TAG: develop
    APP_URL: https://cw-forwarder-stg.sun-asterisk.vn
  <<: *docker-build
  <<: *only-develop
  <<: *not-pr

- name: Stable
  stage: Docker build
  environment:
    TAG: stable
    APP_URL: https://cw-forwarder.sun-asterisk.vn
  <<: *docker-build
  <<: *only-master
  <<: *not-pr

- name: Staging
  stage: Deploy
  image: curlimages/curl
  script:
  - curl -X POST "$STAGING_UPDATE_HOOK?tag=develop"
  <<: *only-develop
  <<: *not-pr

- name: Production
  stage: Deploy
  image: curlimages/curl
  script:
  - curl -X POST "$PRODUCTION_UPDATE_HOOK?tag=stable"
  <<: *only-master
  <<: *not-pr
  release:
    environment: production
    url: https://cw-forwarder.sun-asterisk.vn/
